@model WebAppClient.ViewModels.TicketVM

@functions{
    enum PriorityEnum
    {
        Low,
        Medium,
        High
    }
    enum DaysEnum
    {
        One,
        Seven,
        Thirty
    }

    enum TypeEnum
    {
        Software,
        Hardware,
        Other
    }

    enum StatusEnum
    {
        Open,
        Closed
    }
}

@{ ViewBag.Title = "Edit"; }

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">


        <div>
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2 box" })
            <div class="col-md-10" style="margin-bottom: 1em">
                @Html.DropDownListFor(model => model.Status, new SelectList(Enum.GetValues(typeof(StatusEnum))), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Login == "Admin")
        {
            <div>
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2 box" })
                <div class="col-md-10" style="margin-bottom: 1em">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2 box" })
            <div class="col-md-10" style="margin-bottom: 1em">
                @Html.DropDownListFor(model => model.Type, new SelectList(Enum.GetValues(typeof(TypeEnum))), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        }

        @Html.LabelFor(model => model.NameOfUser, htmlAttributes: new { @class = "control-label col-md-2 box" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.DropDownListFor(model => model.NameOfUser, Model.UserList)
            @Html.ValidationMessageFor(model => model.NameOfUser, "", new { @class = "text-danger" })
        </div>

        @if (Model.Login == "Admin")
        {
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-bottom: 1em">
                @Html.DropDownListFor(model => model.Priority, new SelectList(Enum.GetValues(typeof(PriorityEnum))), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-bottom: 1em">
                @Html.DropDownListFor(model => model.Deadline, new SelectList(Enum.GetValues(typeof(DaysEnum))), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="margin-bottom: 1em">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        }
    </div>


    @if (Model.Login == "Admin")
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" name="adminSave" class="btn btn-default" />
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" name="employeeSave" class="btn btn-default" />
            </div>
        </div>
    }
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

